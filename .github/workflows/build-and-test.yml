name: Build and Test

on: push

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  build_macos:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build_and_test
    name: macOS Build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release --all-features
      - name: Zip archive
        run: zip -r -j -X binance-get_${{ steps.get_version.outputs.version-without-v }}_mac.zip target/release/binance-public-data-cli
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-macos
          path: "*.zip"
          retention-days: 1

  build_ubuntu:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build_and_test
    name: Ubuntu Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release --all-features
      - name: Zip archive
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r release-ubuntu.zip target/release/binance-public-data-cli
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-ubuntu
          path: release-ubuntu.zip
          retention-days: 1

  release_artifacts:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build_ubuntu
      - build_macos
    name: Release artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
      - name: List artifacts
        run: tree
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.zip"

  # release_windows:
  #   needs: build_and_test
  #   name: Windows build
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Build
  #       run: cargo build --release --all-features

  # linux_arm7:
  #   name: Linux ARMv7
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: armv7-unknown-linux-gnueabihf
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --target armv7-unknown-linux-gnueabihf
